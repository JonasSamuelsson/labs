@using _20201005_AzureDevOpsWorkItemVisualizer

@inject AzureDevOpsClient AzureDevOpsClient
@inject AzureDevOpsClientOptions AzureDevOpsClientOptions
@inject GraphGenerator GraphGenerator
@inject IJSRuntime Javascript

<div>
   <div style="position: fixed; top: 10px; left: 10px;">
      <div style="background-color: #e5e5e5; border-radius: 10px; padding: 10px;">
         <span class="oi oi-expand-down" hidden="@(_editorVisible)" @onclick="ToggleEditorVisibility"></span>
         <div hidden="@(_editorVisible == false)">
            <div><label for="organization">Organization</label></div>
            <div><input id="organization" @bind="AzureDevOpsClientOptions.Organization" type="text" /></div>
            <div><label for="project">Project</label></div>
            <div><input id="project" @bind="AzureDevOpsClientOptions.Project" type="text" /></div>
            <div><label for="pat">Personal access token</label></div>
            <div><input id="pat" @bind="AzureDevOpsClientOptions.PersonalAccessToken" type="password" /></div>
            <div><label for="ids">Work item ids</label></div>
            <div><input id="ids" @bind="_ids" type="text" /></div>
            <div>
               <input id="includeFinished" @bind="_includeFinishedWorkItems" type="checkbox" />
               <label for="includeFinished">Include finished work items</label>
            </div>
            <div>
               <button hidden="@(_loading)" @onclick="Load">Load</button>
               <span hidden="@(!_loading)">Loading...</span>
               <span style="position: absolute; bottom: 3px; right: 7px" @onclick="ToggleEditorVisibility">
                  <span class="oi oi-collapse-up"></span>
               </span>
            </div>
         </div>
      </div>
   </div>
   <div id="graph"></div>
</div>


@code {

   private string _ids;
   private bool _includeFinishedWorkItems;
   private bool _loading;
   private bool _editorVisible = true;

   private string _graph;
   private ElementReference _viz;

   private ISet<int> ParseIds()
   {
      return _ids
         .Split(new[] { ' ', ',' }, StringSplitOptions.RemoveEmptyEntries)
         .Select(int.Parse)
         .ToHashSet();
   }

   private async Task Load()
   {
      try
      {
         _loading = true;

         var workItemIds = ParseIds();
         var data = await AzureDevOpsClient.LoadData(workItemIds, _includeFinishedWorkItems);
         var graph = GraphGenerator.GenerateGraph(data);

         Console.WriteLine(graph);

         await Javascript.InvokeVoidAsync("updateGraph", graph);
      }
      catch (Exception exception)
      {
         await Javascript.InvokeVoidAsync("alert", exception.ToString());
      }
      finally
      {
         _loading = false;
      }
   }

   private void ToggleEditorVisibility()
   {
      _editorVisible = !_editorVisible;
   }
}
