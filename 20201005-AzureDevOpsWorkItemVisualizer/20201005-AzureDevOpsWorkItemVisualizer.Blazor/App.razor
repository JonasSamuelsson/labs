@using _20201005_AzureDevOpsWorkItemVisualizer

@inject AzureDevOpsClient AzureDevOpsClient
@inject AzureDevOpsClientOptions AzureDevOpsClientOptions
@inject GraphGenerator GraphGenerator
@inject IJSRuntime Javascript

<div class="main">
   <div class="content px-4">
      <div>
         <label>Organization:</label>
         <input @bind="AzureDevOpsClientOptions.Organization" type="text" />
         <label>Project:</label>
         <input @bind="AzureDevOpsClientOptions.Project" type="text" />
         <label>PAT:</label>
         <input @bind="AzureDevOpsClientOptions.PersonalAccessToken" type="password" />
      </div>

      <div>
         <label>Work item ids:</label>
         <input @bind="_ids" type="text" />
         <button disabled="@(_loading)" @onclick="Load">Load</button>
      </div>

      <div id="graph"></div>
   </div>
</div>


@code {

   private string _ids;
   private bool _loading;

   private string _graph;
   private ElementReference _viz;

   private ISet<int> ParseIds()
   {
      return _ids
         .Split(new[] { ' ', ',', '.' }, StringSplitOptions.RemoveEmptyEntries)
         .Select(int.Parse)
         .ToHashSet();
   }

   private async Task Load()
   {
      try
      {
         _loading = true;

         var data = await AzureDevOpsClient.LoadData(ParseIds());
         var graph = GraphGenerator.GenerateGraph(data);

         await Javascript.InvokeVoidAsync("updateGraph", graph);
      }
      catch (Exception exception)
      {
         await Javascript.InvokeVoidAsync("alert", exception.ToString());
      }
      finally
      {
         _loading = false;
      }
   }

}